import os
import psutil
import subprocess

# Define suspicious file extensions often used by malware
suspicious_extensions = ['.exe', '.vbs', '.bat', '.js']

# Define common malicious process names (just examples)
malicious_processes = ['badprocess.exe', 'malware.exe']

# Function to delete suspicious files
def delete_suspicious_files():
    for root, dirs, files in os.walk("C:\\"):  # Assuming Windows OS
        for file in files:
            if any(file.endswith(ext) for ext in suspicious_extensions):
                full_path = os.path.join(root, file)
                try:
                    os.remove(full_path)
                    print(f"Deleted: {full_path}")
                except Exception as e:
                    print(f"Failed to delete {full_path}: {e}")

# Function to kill malicious processes
def kill_malicious_processes():
    for proc in psutil.process_iter(['pid', 'name']):
        if proc.info['name'] in malicious_processes:
            try:
                p = psutil.Process(proc.info['pid'])
                p.terminate()  # or p.kill() if termination fails
                print(f"Killed process: {proc.info['name']} (PID: {proc.info['pid']})")
            except psutil.NoSuchProcess:
                pass
            except Exception as e:
                print(f"Failed to kill {proc.info['name']}: {e}")

# Main function to execute the mitigation steps
def main():
    print("Starting malware mitigation...")
    delete_suspicious_files()
    kill_malicious_processes()
    print("Malware mitigation process completed.")

if __name__ == "__main__":
    main()
